version: 2
jobs:
  build:
    docker:
      - image: quarkchaindocker/goquarkchain

    steps:
      - checkout

      - restore_cache:
          keys:
            - go-mod-v2-{{ checksum "go.sum" }}

      # Build qkchash c++
      - run: cd consensus/qkchash/native && make && cd -
      - run: go vet ./...
      - run: pwd
      - save_cache:
          key: go-mod-v2-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  test:
    docker:
      - image: quarkchaindocker/goquarkchain

    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v2-{{checksum "go.sum"}}
      - run: cd consensus/qkchash/native && make && cd -
      - run: go vet ./...
      - run: go test -timeout 1m ./... -gcflags=-l
      - save_cache:
          key: go-mod-v2-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  download-snapshot:
    docker:
      - image: quarkchaindocker/goquarkchain

    working_directory: /tmp

    steps:
      - run: mkdir -p workspace
      - run: pwd
      - run:
         name: download-snapshot
         command: |
           echo "hello download-snapshot"
           curl https://qkcmainnet-go.s3.amazonaws.com/data/`curl https://qkcmainnet-go.s3.amazonaws.com/data/LATEST`.tar.gz --output data.tar.gz
           tar xvfz data.tar.gz
          rm data.tar.gz && mv data workspace/
      - save_cache:
          paths:
            - /tmp/workspace/data
          key: snapshot-{{ epoch }}

  check-db:
    docker:
      - image: quarkchaindocker/goquarkchain

    working_directory: /tmp

    steps:

      - restore_cache:
          keys:
            - go-mod-v2-{{ checksum "go.sum" }}

      - restore_cache:
          keys:
          - snapshot-


      - run:
          name: Check DB
          command: |
            echo "hello check_db"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - download-snapshot
      - check-db:
          requires:
            - build
            - download-snapshot
  nightly:
    triggers:
      - schedule:
          cron: "0 3 * * *"
          filters:
            branches:
              only:
                - dev
    jobs:
      - build
      - download-snapshot
      - check-db:
          requires:
            - build
            - download-snapshot
